name: Sync Docker Images to Any Container Registry

on:
  workflow_dispatch:
  push:
    paths:
      - images-list.txt

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Target Registry
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login "${{ secrets.ACR_REGISTRY }}" -u "${{ secrets.ACR_USERNAME }}" --password-stdin

      - name: Sync Docker Images in Parallel
        run: |
          # 并发限制
          MAX_PARALLEL=4
          JOBS=0
          FAILURES=()
      
          echo "=== Start syncing ==="
      
          sync_image() {
            local image="$1"
            echo "::group::⏳ Syncing $image"
      
            # 自动补全 tag
            [[ "$image" != *:* ]] && image="${image}:latest"
      
            name_with_tag=$(basename "$image")
            name=${name_with_tag%%:*}
            tag=${name_with_tag#*:}
            target="${{ secrets.ACR_REGISTRY }}/${{ secrets.ACR_NAMESPACE }}/$name:$tag"
      
            echo "Pulling $image..."
            if ! docker pull "$image"; then
              echo "❌ Failed to pull $image"
              echo "::endgroup::"
              return 1
            fi
      
            echo "Tagging → $target"
            if ! docker tag "$image" "$target"; then
              echo "❌ Failed to tag $image"
              echo "::endgroup::"
              return 1
            fi
      
            echo "Pushing to $target..."
            if ! docker push "$target"; then
              echo "❌ Failed to push $target"
              echo "::endgroup::"
              return 1
            fi
      
            echo "✅ Done: $image"
            echo "::endgroup::"
          }
      
          export -f sync_image
      
          # 使用 xargs 控制并发执行，每行作为参数传入函数
          grep -vE '^\s*#|^\s*$' images-list.txt | \
            xargs -I {} -P "$MAX_PARALLEL" bash -c 'sync_image "$@"' _ {}
      
          echo "=== All tasks finished ==="
